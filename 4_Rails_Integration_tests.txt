
1. RAILS INTEGRATION TEST

Using Rails integration test helpers complete the two tests below by calling the tweet_url(@tweet) path using GET,
and asserting a successful response and that the h1 tag contains the @tweet.status.

class TweetDisplaysStatusTest < ActionDispatch::IntegrationTest
  def setup
    @tweet = tweets(:hello_world)
  end

  test "Tweet page responds successfully" do
    get tweet_url @tweet
    assert_response :success
  end

  test "Tweet displays status in heading" do 
    get tweet_url @tweet
    assert_select 'h1', @tweet.status
  end
end

2. RAILS INTEGRATION TEST - POST

Notice below how we're creating a tweet using POST. Complete the integration test below to assert that the user is
redirected to the tweet page of the last Tweet created (Tweet.last).

Use assert_redirected_to to test that you've redirected to the tweet url Tweet.last
class CreatingATweetTest < ActionDispatch::IntegrationTest
  def setup
    @zombie = zombies(:ash)
    @tweet_attributes = {tweet: {zombie_id: @zombie.id, status: 'Test tweet'}}
  end

  test "Responds with a redirect to the tweet page" do
    post tweets_url, @tweet_attributes
    assert_redirected_to
  end
end

The correct answer is:

class CreatingATweetTest < ActionDispatch::IntegrationTest
  def setup
    @zombie = zombies(:ash)
    @tweet_attributes = {tweet: {zombie_id: @zombie.id, status: 'Test tweet'}}
  end

  test "Responds with a redirect to the tweet page" do
    post tweets_url, @tweet_attributes
    assert_redirected_to tweet_url(Tweet.last)
  end
end
